{
    "swagger": "2.0",
    "info": {
        "description": "API for managing trips",
        "title": "Trips API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Get a list of trips based on query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trips"
                ],
                "summary": "Get Trips",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Departure City",
                        "name": "depCity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Arrival City",
                        "name": "arrCity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Departure Date",
                        "name": "depDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Arrival Date",
                        "name": "arrDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.FoundTrip"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new trip by providing trip data in the request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trips"
                ],
                "summary": "Create a new Trip",
                "parameters": [
                    {
                        "description": "Trip data",
                        "name": "trip",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Trip"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Trip"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{id}": {
            "delete": {
                "description": "Delete a trip by its ID",
                "tags": [
                    "Trips"
                ],
                "summary": "Delete a Trip",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Trip does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Could not delete Trip",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a trip by providing trip data and ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trips"
                ],
                "summary": "Update an existing Trip",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated trip data",
                        "name": "trip",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Trip"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Trip"
                        }
                    },
                    "400": {
                        "description": "Trip does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.FoundTrip": {
            "type": "object",
            "properties": {
                "fromTrip": {
                    "$ref": "#/definitions/main.Trip"
                },
                "singleDir": {
                    "type": "boolean"
                },
                "toTrip": {
                    "$ref": "#/definitions/main.Trip"
                }
            }
        },
        "main.Trip": {
            "type": "object",
            "properties": {
                "arrCityId": {
                    "type": "integer"
                },
                "available": {
                    "$ref": "#/definitions/main.Visibility"
                },
                "dateCreated": {
                    "type": "string"
                },
                "dateEdited": {
                    "type": "string"
                },
                "depCityId": {
                    "type": "integer"
                },
                "departureDate": {
                    "type": "string"
                },
                "distanceKm": {
                    "type": "number"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "main.Visibility": {
            "type": "integer",
            "enum": [
                0,
                1,
                5,
                10,
                15
            ],
            "x-enum-varnames": [
                "VisibilityNone",
                "VisibilityAuthor",
                "VisibilityRequest",
                "VisibilityFriends",
                "VisibilityEverybody"
            ]
        }
    }
}